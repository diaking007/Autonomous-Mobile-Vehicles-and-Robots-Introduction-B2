Integer Tokens
Integer Blocks
Integer BT
Integer tower
Integer BlockID
Integer button_press_count_B
Integer button_press_count_T
Integer timer_B
Integer timer_T
Double TokenHeigh
Double BlockHeigh

Function task3
	
Motor On
Power High
Speed 10
Accel 10, 10
SpeedS 10
AccelS 10
Tool 1

BT = 5
Tokens = 0
Blocks = 0
TokenHeigh = 6.0
BlockHeigh = 6.0
tower = 0
button_press_count_B = 0
button_press_count_T = 0
timer_B = 0
timer_T = 0

Go B2_Infeed_Tsafe +Z(-25) +X(64) +Y(30) /3
 
If Sw(4) = On Then
	Print("")
	Check_B_Num()
	Check_T_Num() '如果亮了代表有斷電過
Else
	Print "Keep Moving~!"
EndIf


If tower = 1 Or tower = 3 Or tower = 5 Or tower = 7 Or tower = 9 Or tower = 11 Then
	For BlockID = BT To 0 Step -1
		Pick_Infeed_Token3()
		Alignment_Block3()
		If Blocks < 6 Then
			Pick_Infeed_Block3()
			Alignment_Block3()
			Blocks = Blocks + 1
		EndIf
		Tokens = Tokens + 1
		BT = BT - 1
		Print BT
	Next BlockID
ElseIf tower = 0 Or tower = 2 Or tower = 4 Or tower = 6 Or tower = 8 Or tower = 10 Then
 	For BlockID = BT To 0 Step -1
		Pick_Infeed_Block3()
		Alignment_Block3()
		Pick_Infeed_Token3()
		Alignment_Block3()
		Tokens = Tokens + 1
		Blocks = Blocks + 1
		'BT = BT - 1
	Next BlockID
EndIf


Go B2_Infeed_Tsafe +Z(-25) +X(64) +Y(30) /3
Fend
Function Check_B_Num
 '' 進入迴圈，設定條件為按鈕次數小於等於5且計時器小於5000（5秒）
Do While button_press_count_B <= 6 And timer_B < 2
Print "!!!!!!!!!! Check the Blocks_Quantity !!!!!!!!!!"
  		Wait 2.0 '等一秒給按圓的
	If Sw(7) = On Then
    '按下按鈕，增加按鈕次數並重置計時器
		button_press_count_B = button_press_count_B + 1
		Print "Blocks=", button_press_count_B
		timer_B = 0
        Wait 0.1  ' 等待一小段時間以避免連續偵測到按鈕
	Else
	' 如果按鈕沒有按下，增加計時器
		timer_B = timer_B + 1  ' 假設每100毫秒加100
        Wait 0.1
    EndIf
Loop
Fend
Function Check_T_Num
  	Do While button_press_count_T <= 6 And timer_T < 2
  		Print "!!!!!!!!!! Check the Tokens_Quantity !!!!!!!!!!"
  		Wait 2.0 '等一秒給按圓的
       If Sw(0) = On Then
          ' 按下按鈕，增加按鈕次數並重置計時器
           button_press_count_T = button_press_count_T + 1
           Print "Tokens=", button_press_count_T
           timer_T = 0
           Wait 0.1  '等待一小段時間以避免連續偵測到按鈕
       Else
          ' 如果按鈕沒有按下，增加計時器
           timer_T = timer_T + 1  '假設每100毫秒加100
           Wait 0.1
       EndIf
  Loop

If button_press_count_B = 0 Then
	Print "No power outage."
EndIf
If button_press_count_B = 1 Then
'如果方的少1個
	If button_press_count_T = 0 Then
		BT = BT
   		Blocks = Blocks + 1
   		Tokens = Tokens
  		tower = tower + 1
	ElseIf button_press_count_T = 1 Then
		BT = BT - 1
   		Blocks = Blocks + 1
   		Tokens = Tokens + 1
   		tower = tower + 2
  	EndIf
EndIf
If button_press_count_B = 2 Then
' 如果方的少2個
     If button_press_count_T = 1 Then
		BT = BT - 1
   		Blocks = Blocks + 2
   		Tokens = Tokens + 1
  		tower = tower + 3
	 ElseIf button_press_count_T = 2 Then
		BT = BT - 2
   		Blocks = Blocks + 2
   		Tokens = Tokens + 2
   		tower = tower + 4
  	EndIf
EndIf
If button_press_count_B = 3 Then
' 如果方的少3個
	If button_press_count_T = 2 Then
		BT = BT - 2
   		Blocks = Blocks + 3
   		Tokens = Tokens + 2
  		tower = tower + 5
	ElseIf button_press_count_T = 3 Then
		BT = BT - 3
   		Blocks = Blocks + 3
   		Tokens = Tokens + 3
   		tower = tower + 6
  	EndIf
EndIf
If button_press_count_B = 4 Then
' 如果方的少4個
	If button_press_count_T = 3 Then
		BT = BT - 3
   		Blocks = Blocks + 4
   		Tokens = Tokens + 3
  		tower = tower + 7
	ElseIf button_press_count_T = 4 Then
		BT = BT - 4
   		Blocks = Blocks + 4
   		Tokens = Tokens + 4
   		tower = tower + 8
  	EndIf
EndIf
If button_press_count_B = 5 Then
' 如果方的少5個
	If button_press_count_T = 4 Then
		BT = BT - 4
   		Blocks = Blocks + 5
   		Tokens = Tokens + 4
  		tower = tower + 9
	ElseIf button_press_count_T = 5 Then
		BT = BT - 5
   		Blocks = Blocks + 5
   		Tokens = Tokens + 5
   		tower = tower + 10
  	EndIf
EndIf
If button_press_count_B = 6 Then
' 如果方的少6個
	If button_press_count_T = 5 Then
		BT = BT - 5
   		Blocks = Blocks + 6
   		Tokens = Tokens + 5
  		tower = tower + 11
	ElseIf button_press_count_T = 6 Then
		BT = BT - 6
   		Blocks = Blocks + 6
   		Tokens = Tokens + 6
   		tower = tower + 12
   		Print "All Done."
  	EndIf
EndIf
Print "tower:", tower
Print "BT:", BT
Fend
Function Pick_Infeed_Token3
	'Pick Token from Infeed
	Print "Picking Token from Infeed. Token ID = ", Tokens
    Go B2_Infeed_Tsafe +Z(-25) +X(90) +Y(34) /3 CP
	'圓形安全點
	On 8
	Move B2_Infeed_Tsafe +Z(-43.5 - (Tokens * TokenHeigh)) +X(90) +Y(34) /3 CP
	'取圓形
	'Wait .3
	Go B2_Infeed_Tsafe +Z(-25) +X(85) +Y(34) /3 CP
	'回圓形安全點
	Go B2_Infeed +Z(70) +X(144) +Y(70) /3 CP
	'回方形安全點
Fend

Function Pick_Infeed_Block3
	'Pick Block from Infeed
	Print "Picking Block from Infeed. Block ID = ", Blocks
	
	Go B2_Infeed +Z(50) +X(118.5) +Y(29) /3 CP
	'方形安全點
	On 8
	Move B2_Infeed +Z(33.5 - (Blocks * BlockHeigh)) +X(118.5) +Y(29) /3 CP
	'取方形
	'Wait .3
	Go B2_Infeed +Z(55) +X(114) +Y(29) /3 CP
	'回方形安全點
	Go B2_Infeed +Z(70) +X(144) +Y(70) /3 CP
	'回方形安全點
Fend

Function Alignment_Block3
	'Alignment Block
   Print "Aligning Block. Block ID = ", Blocks

   Go B2_Align +Z(10 + (tower * BlockHeigh)) +X(90) +Y(26) /2
   '放置上方
   Go B2_Align +Z(3.5 + (tower * BlockHeigh)) +X(90) +Y(25.5) /2
   '放置
   Off 8
   Wait 0.1
   Go B2_Align +Z(5 + (tower * BlockHeigh)) +X(90) +Y(25.5) /2
   '放置後上抬
   Go B2_Align +Z(20 + (tower * BlockHeigh)) +X(70) +Y(25.5) /2
   tower = tower + 1
Fend
